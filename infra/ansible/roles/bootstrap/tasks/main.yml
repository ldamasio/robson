- name: Ensure admin user exists
  ansible.builtin.user:
    name: "{{ admin_user }}"
    groups: sudo
    append: true
    create_home: true
    shell: /bin/bash

- name: Allow admin user passwordless sudo
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/99-{{ admin_user }}"
    content: "{{ admin_user }} ALL=(ALL) NOPASSWD:ALL\n"
    owner: root
    group: root
    mode: '0440'

- name: Install required packages (OpenSSH server, UFW)
  ansible.builtin.apt:
    name:
      - openssh-server
      - ufw
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: Ensure admin authorized_keys is present
  ansible.builtin.authorized_key:
    user: "{{ admin_user }}"
    state: present
    key: "{{ admin_pubkey }}"
  when: admin_pubkey | length > 0

- name: Ensure SSHD listens on hardened port
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^Port\s+{{ ssh_port }}$'
    line: "Port {{ ssh_port }}"
    state: present
    insertafter: EOF

- name: Keep SSHD also on port 22 during migration (safer)
  when: ssh_keep_port_22 | default(true)
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^Port\s+22$'
    line: 'Port 22'
    state: present
    insertafter: EOF

- name: Remove SSHD port 22 when migration toggle is off
  when: not (ssh_keep_port_22 | default(true))
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^Port\s+22$'
    state: absent

- name: Configure SSHD - disable password auth
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PasswordAuthentication\s+'
    line: 'PasswordAuthentication no'
    state: present

- name: Configure SSHD - disable root password login
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PermitRootLogin\s+'
    line: 'PermitRootLogin prohibit-password'
    state: present

- name: Configure SSHD - ensure PubkeyAuthentication yes
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PubkeyAuthentication\s+'
    line: 'PubkeyAuthentication yes'
    state: present

- name: Allow new SSH port on UFW
  community.general.ufw:
    rule: allow
    port: "{{ ssh_port }}"
    proto: tcp

- name: Allow SSH 22/tcp on UFW during migration
  when: ssh_keep_port_22 | default(true)
  community.general.ufw:
    rule: allow
    port: "22"
    proto: tcp

- name: Deny all incoming by default (UFW)
  community.general.ufw:
    state: enabled
    policy: deny
    direction: incoming

- name: Allow all outgoing by default (UFW)
  community.general.ufw:
    state: enabled
    policy: allow
    direction: outgoing

- name: Ensure UFW is enabled
  community.general.ufw:
    state: enabled

- name: Restart SSH service
  ansible.builtin.service:
    name: ssh
    state: restarted

- name: Switch Ansible connection to new SSH port for subsequent tasks
  ansible.builtin.set_fact:
    ansible_port: "{{ ssh_port }}"

- name: Reset SSH connection to apply new port
  ansible.builtin.meta: reset_connection

# Optional: open basic k3s ports for cluster communication
- name: Allow k3s API server 6443/tcp (server only)
  when: bootstrap_open_k3s_ports | default(false) and (inventory_hostname in groups['k3s_server'])
  community.general.ufw:
    rule: allow
    port: "6443"
    proto: tcp

- name: Allow k3s supervisor 9345/tcp (server only)
  when: bootstrap_open_k3s_ports | default(false) and (inventory_hostname in groups['k3s_server'])
  community.general.ufw:
    rule: allow
    port: "9345"
    proto: tcp

- name: Allow flannel VXLAN 8472/udp (all nodes)
  when: bootstrap_open_k3s_ports | default(false)
  community.general.ufw:
    rule: allow
    port: "8472"
    proto: udp

- name: Allow kubelet 10250/tcp (agents) when enabled
  when: (k3s_allow_kubelet_port | default(false)) and (inventory_hostname in groups['k3s_agent'])
  community.general.ufw:
    rule: allow
    port: "10250"
    proto: tcp

# Optional: open gateway (HTTP/HTTPS) on server or dedicated gateway group
- name: Allow HTTP 80/tcp on gateway nodes
  when: open_gateway_ports | default(false) and (
          (inventory_hostname in groups['k3s_server']) or
          ("k3s_gateway" in groups and (inventory_hostname in groups['k3s_gateway']))
        )
  community.general.ufw:
    rule: allow
    port: "80"
    proto: tcp

- name: Allow HTTPS 443/tcp on gateway nodes
  when: open_gateway_ports | default(false) and (
          (inventory_hostname in groups['k3s_server']) or
          ("k3s_gateway" in groups and (inventory_hostname in groups['k3s_gateway']))
        )
  community.general.ufw:
    rule: allow
    port: "443"
    proto: tcp
