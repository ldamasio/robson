from decimal import Decimal

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("clients", "0001_initial"),
        ("api", "0007_facts_models"),
    ]

    operations = [
        migrations.CreateModel(
            name="OddsYourFavor",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("description", models.TextField(help_text="Detailed description")),
                ("experience", models.IntegerField(choices=[(1, "Beginner"), (2, "Basic"), (3, "Intermediate"), (4, "Advanced"), (5, "Expert")], default=1, help_text="Required experience level (1-5)")),
                ("name", models.CharField(max_length=255)),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
            options={
                "ordering": ["name"],
                "verbose_name": "Principle",
                "verbose_name_plural": "Principles",
            },
        ),
        migrations.CreateModel(
            name="LimitLosses",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("description", models.TextField(help_text="Detailed description")),
                ("experience", models.IntegerField(choices=[(1, "Beginner"), (2, "Basic"), (3, "Intermediate"), (4, "Advanced"), (5, "Expert")], default=1, help_text="Required experience level (1-5)")),
                ("name", models.CharField(max_length=255)),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
            options={
                "ordering": ["name"],
                "verbose_name": "Principle",
                "verbose_name_plural": "Principles",
            },
        ),
        migrations.CreateModel(
            name="Attribute",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("description", models.TextField(help_text="Detailed description")),
                ("experience", models.IntegerField(choices=[(1, "Beginner"), (2, "Basic"), (3, "Intermediate"), (4, "Advanced"), (5, "Expert")], default=1, help_text="Required experience level (1-5)")),
                ("name", models.CharField(max_length=255)),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
            options={
                "ordering": ["name"],
                "verbose_name": "Attribute",
                "verbose_name_plural": "Attributes",
            },
        ),
        migrations.CreateModel(
            name="Hammer",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("type", models.CharField(choices=[("BULLISH", "Bullish"), ("BEARISH", "Bearish"), ("NEUTRAL", "Neutral")], help_text="Market direction (Bull, Bear, Neutral)", max_length=10)),
                ("description", models.TextField(help_text="Detailed description")),
                ("confidence", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Confidence level (0-100%)", max_digits=5)),
                ("name", models.CharField(max_length=100)),
                ("reliability", models.DecimalField(decimal_places=2, max_digits=5)),
                ("pattern_category", models.CharField(choices=[("REVERSAL", "Reversal"), ("CONTINUATION", "Continuation"), ("NEUTRAL", "Neutral")], default="NEUTRAL", max_length=20)),
                ("confirmation_required", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, default="")),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
        ),
        migrations.CreateModel(
            name="InvertedHammer",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("type", models.CharField(choices=[("BULLISH", "Bullish"), ("BEARISH", "Bearish"), ("NEUTRAL", "Neutral")], help_text="Market direction (Bull, Bear, Neutral)", max_length=10)),
                ("description", models.TextField(help_text="Detailed description")),
                ("confidence", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Confidence level (0-100%)", max_digits=5)),
                ("name", models.CharField(max_length=100)),
                ("reliability", models.DecimalField(decimal_places=2, max_digits=5)),
                ("pattern_category", models.CharField(choices=[("REVERSAL", "Reversal"), ("CONTINUATION", "Continuation"), ("NEUTRAL", "Neutral")], default="NEUTRAL", max_length=20)),
                ("confirmation_required", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, default="")),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
        ),
        migrations.CreateModel(
            name="HangingMan",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("type", models.CharField(choices=[("BULLISH", "Bullish"), ("BEARISH", "Bearish"), ("NEUTRAL", "Neutral")], help_text="Market direction (Bull, Bear, Neutral)", max_length=10)),
                ("description", models.TextField(help_text="Detailed description")),
                ("confidence", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Confidence level (0-100%)", max_digits=5)),
                ("name", models.CharField(max_length=100)),
                ("reliability", models.DecimalField(decimal_places=2, max_digits=5)),
                ("pattern_category", models.CharField(choices=[("REVERSAL", "Reversal"), ("CONTINUATION", "Continuation"), ("NEUTRAL", "Neutral")], default="NEUTRAL", max_length=20)),
                ("confirmation_required", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, default="")),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
        ),
        migrations.CreateModel(
            name="Piercing",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("type", models.CharField(choices=[("BULLISH", "Bullish"), ("BEARISH", "Bearish"), ("NEUTRAL", "Neutral")], help_text="Market direction (Bull, Bear, Neutral)", max_length=10)),
                ("description", models.TextField(help_text="Detailed description")),
                ("confidence", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Confidence level (0-100%)", max_digits=5)),
                ("name", models.CharField(max_length=100)),
                ("reliability", models.DecimalField(decimal_places=2, max_digits=5)),
                ("pattern_category", models.CharField(choices=[("REVERSAL", "Reversal"), ("CONTINUATION", "Continuation"), ("NEUTRAL", "Neutral")], default="NEUTRAL", max_length=20)),
                ("confirmation_required", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, default="")),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
        ),
        migrations.CreateModel(
            name="Engulfing",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("type", models.CharField(choices=[("BULLISH", "Bullish"), ("BEARISH", "Bearish"), ("NEUTRAL", "Neutral")], help_text="Market direction (Bull, Bear, Neutral)", max_length=10)),
                ("description", models.TextField(help_text="Detailed description")),
                ("confidence", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Confidence level (0-100%)", max_digits=5)),
                ("name", models.CharField(max_length=100)),
                ("reliability", models.DecimalField(decimal_places=2, max_digits=5)),
                ("pattern_category", models.CharField(choices=[("REVERSAL", "Reversal"), ("CONTINUATION", "Continuation"), ("NEUTRAL", "Neutral")], default="NEUTRAL", max_length=20)),
                ("confirmation_required", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, default="")),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
        ),
        migrations.CreateModel(
            name="ShootingStar",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("type", models.CharField(choices=[("BULLISH", "Bullish"), ("BEARISH", "Bearish"), ("NEUTRAL", "Neutral")], help_text="Market direction (Bull, Bear, Neutral)", max_length=10)),
                ("description", models.TextField(help_text="Detailed description")),
                ("confidence", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Confidence level (0-100%)", max_digits=5)),
                ("name", models.CharField(max_length=100)),
                ("reliability", models.DecimalField(decimal_places=2, max_digits=5)),
                ("pattern_category", models.CharField(choices=[("REVERSAL", "Reversal"), ("CONTINUATION", "Continuation"), ("NEUTRAL", "Neutral")], default="NEUTRAL", max_length=20)),
                ("confirmation_required", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, default="")),
                ("candle_sequence", models.JSONField(blank=True, default=list, help_text="Optional candle sequence details (open/high/low/close order).")),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
        ),
        migrations.CreateModel(
            name="MorningStar",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("type", models.CharField(choices=[("BULLISH", "Bullish"), ("BEARISH", "Bearish"), ("NEUTRAL", "Neutral")], help_text="Market direction (Bull, Bear, Neutral)", max_length=10)),
                ("description", models.TextField(help_text="Detailed description")),
                ("confidence", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Confidence level (0-100%)", max_digits=5)),
                ("name", models.CharField(max_length=100)),
                ("reliability", models.DecimalField(decimal_places=2, max_digits=5)),
                ("pattern_category", models.CharField(choices=[("REVERSAL", "Reversal"), ("CONTINUATION", "Continuation"), ("NEUTRAL", "Neutral")], default="NEUTRAL", max_length=20)),
                ("confirmation_required", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, default="")),
                ("candle_sequence", models.JSONField(default=list, help_text="Chronological candle sequence key points.")),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
        ),
        migrations.CreateModel(
            name="EveningStar",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("type", models.CharField(choices=[("BULLISH", "Bullish"), ("BEARISH", "Bearish"), ("NEUTRAL", "Neutral")], help_text="Market direction (Bull, Bear, Neutral)", max_length=10)),
                ("description", models.TextField(help_text="Detailed description")),
                ("confidence", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Confidence level (0-100%)", max_digits=5)),
                ("name", models.CharField(max_length=100)),
                ("reliability", models.DecimalField(decimal_places=2, max_digits=5)),
                ("pattern_category", models.CharField(choices=[("REVERSAL", "Reversal"), ("CONTINUATION", "Continuation"), ("NEUTRAL", "Neutral")], default="NEUTRAL", max_length=20)),
                ("confirmation_required", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, default="")),
                ("candle_sequence", models.JSONField(default=list, help_text="Chronological candle sequence key points.")),
                ("tip", models.TextField(default='Observe evening star on the 5-minute chart. The Evening Star pattern is a reversal pattern that forms when a bearish candlestick is followed by two bullish candlesticks, with the second bullish candlestick closing higher than the first bullish candlestick.', help_text="Additional educational guidance for the pattern.")),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
        ),
        migrations.CreateModel(
            name="OnePercentOfCapital",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("description", models.TextField(help_text="Detailed description")),
                ("name", models.CharField(max_length=255)),
                ("risk_percentage", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Percentage of capital impacted by the rule", max_digits=5)),
                ("max_capital_amount", models.DecimalField(blank=True, decimal_places=2, help_text="Optional hard cap in monetary units", max_digits=20, null=True)),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
            options={
                "verbose_name": "Risk Rule",
                "verbose_name_plural": "Risk Rules",
            },
        ),
        migrations.CreateModel(
            name="JustBet4percent",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("description", models.TextField(help_text="Detailed description")),
                ("name", models.CharField(max_length=255)),
                ("risk_percentage", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Percentage of capital impacted by the rule", max_digits=5)),
                ("max_capital_amount", models.DecimalField(blank=True, decimal_places=2, help_text="Optional hard cap in monetary units", max_digits=20, null=True)),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
            options={
                "verbose_name": "Risk Rule",
                "verbose_name_plural": "Risk Rules",
            },
        ),
        migrations.CreateModel(
            name="OnlyTradeReversal",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("description", models.TextField(help_text="Detailed description")),
                ("name", models.CharField(max_length=255)),
                ("is_enabled", models.BooleanField(default=True)),
                ("minimum_confirmation", models.PositiveIntegerField(default=1, help_text="Number of confirmations required before allowing the trade")),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
            options={
                "verbose_name": "Only Trade Reversal Rule",
                "verbose_name_plural": "Only Trade Reversal Rules",
            },
        ),
        migrations.CreateModel(
            name="MaxTradePerDay",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("description", models.TextField(help_text="Detailed description")),
                ("name", models.CharField(max_length=255)),
                ("max_trades", models.PositiveIntegerField(default=3)),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
            options={
                "verbose_name": "Daily Trade Limit",
                "verbose_name_plural": "Daily Trade Limits",
            },
        ),
        migrations.CreateModel(
            name="BollingerBands",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("type", models.CharField(choices=[("BULLISH", "Bullish"), ("BEARISH", "Bearish"), ("NEUTRAL", "Neutral")], help_text="Market direction (Bull, Bear, Neutral)", max_length=10)),
                ("description", models.TextField(help_text="Detailed description")),
                ("confidence", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Confidence level (0-100%)", max_digits=5)),
                ("timeframe", models.CharField(default="1h", max_length=8)),
                ("period", models.IntegerField()),
                ("standard_deviations", models.DecimalField(decimal_places=2, default=Decimal("2.00"), max_digits=5)),
                ("upper_band", models.DecimalField(decimal_places=8, default=Decimal("0"), max_digits=20)),
                ("middle_band", models.DecimalField(decimal_places=8, default=Decimal("0"), max_digits=20)),
                ("lower_band", models.DecimalField(decimal_places=8, default=Decimal("0"), max_digits=20)),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
                ("symbol", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="bollinger_bands", to="api.symbol")),
            ],
        ),
        migrations.CreateModel(
            name="StochasticOscillator",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("type", models.CharField(choices=[("BULLISH", "Bullish"), ("BEARISH", "Bearish"), ("NEUTRAL", "Neutral")], help_text="Market direction (Bull, Bear, Neutral)", max_length=10)),
                ("description", models.TextField(help_text="Detailed description")),
                ("confidence", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Confidence level (0-100%)", max_digits=5)),
                ("timeframe", models.CharField(default="1h", max_length=8)),
                ("period", models.IntegerField(default=14)),
                ("k_value", models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=5)),
                ("d_value", models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=5)),
                ("slow_d_value", models.DecimalField(decimal_places=2, default=Decimal("0"), help_text="Optional slow %D value", max_digits=5)),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
                ("symbol", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="stochastic_oscillators", to="api.symbol")),
            ],
        ),
        migrations.CreateModel(
            name="AlocatedCapitalPercent",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Record creation timestamp")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Last update timestamp")),
                ("is_active", models.BooleanField(default=True, help_text="Indicates if this record is active")),
                ("type", models.CharField(choices=[("BULLISH", "Bullish"), ("BEARISH", "Bearish"), ("NEUTRAL", "Neutral")], help_text="Market direction (Bull, Bear, Neutral)", max_length=10)),
                ("description", models.TextField(help_text="Detailed description")),
                ("confidence", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Confidence level (0-100%)", max_digits=5)),
                ("name", models.CharField(max_length=255)),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                ("metadata", models.JSONField(blank=True, default=dict, help_text="Arbitrary data used to build the report")),
                ("percentage", models.DecimalField(decimal_places=2, default=Decimal("0.00"), help_text="Percentage of capital currently allocated", max_digits=5)),
                ("capital_amount", models.DecimalField(blank=True, decimal_places=2, help_text="Capital amount represented by the percentage", max_digits=20, null=True)),
                ("client", models.ForeignKey(blank=True, help_text="Client that owns this record", null=True, on_delete=django.db.models.deletion.SET_NULL, to="clients.client")),
            ],
            options={
                "ordering": ["-generated_at"],
                "verbose_name": "Report",
                "verbose_name_plural": "Reports",
            },
        ),
    ]
