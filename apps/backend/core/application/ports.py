from __future__ import annotations
from typing import Protocol, Optional, Iterable
from decimal import Decimal
from datetime import datetime

# Define ports here; concrete implementations live under adapters/*

class OrderRepository(Protocol):
    def save(self, order: object) -> None: ...
    def find_by_id(self, oid: str) -> Optional[object]: ...
    def list_recent(self, since: datetime) -> Iterable[object]: ...

class MarketDataPort(Protocol):
    def best_bid(self, symbol: object) -> Decimal: ...
    def best_ask(self, symbol: object) -> Decimal: ...

class ExchangeExecutionPort(Protocol):
    def place_limit(self, order: object) -> str: ...

class EventBusPort(Protocol):
    def publish(self, topic: str, payload: dict) -> None: ...

class ClockPort(Protocol):
    def now(self) -> datetime: ...

class UnitOfWork(Protocol):
    def __enter__(self) -> "UnitOfWork": ...
    def __exit__(self, exc_type, exc, tb) -> None: ...
    def commit(self) -> None: ...
