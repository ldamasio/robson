# Generated by Django 5.2 on 2025-09-13 05:16

import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record creation timestamp')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('config', models.JSONField(default=dict, help_text='Strategy configuration')),
                ('risk_config', models.JSONField(default=dict, help_text='Risk configuration')),
                ('is_active', models.BooleanField(default=True)),
                ('total_trades', models.IntegerField(default=0)),
                ('winning_trades', models.IntegerField(default=0)),
                ('total_pnl', models.DecimalField(decimal_places=8, default=Decimal('0'), max_digits=20)),
                ('client', models.ForeignKey(blank=True, help_text='Client that owns this record', null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.client')),
            ],
            options={
                'verbose_name_plural': 'strategies',
            },
        ),
        migrations.CreateModel(
            name='Symbol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record creation timestamp')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('base_asset', models.CharField(max_length=32)),
                ('quote_asset', models.CharField(max_length=32)),
                ('is_active', models.BooleanField(default=True)),
                ('min_qty', models.DecimalField(decimal_places=8, default=Decimal('1E-8'), max_digits=20)),
                ('max_qty', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('client', models.ForeignKey(blank=True, help_text='Client that owns this record', null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.client')),
            ],
            options={
                'verbose_name': 'Symbol',
                'verbose_name_plural': 'Symbols',
                'unique_together': {('id', 'client')},
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record creation timestamp')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if this record is active')),
                ('side', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=10)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20)),
                ('average_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('CLOSED', 'Closed')], default='OPEN', max_length=10)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('unrealized_pnl', models.DecimalField(decimal_places=8, default=Decimal('0'), max_digits=20)),
                ('client', models.ForeignKey(blank=True, help_text='Client that owns this record', null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.client')),
                ('strategy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.strategy')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.symbol')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record creation timestamp')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('side', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=10)),
                ('order_type', models.CharField(choices=[('MARKET', 'Market'), ('LIMIT', 'Limit')], default='MARKET', max_length=20)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20)),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PARTIALLY_FILLED', 'Partially Filled'), ('FILLED', 'Filled'), ('CANCELLED', 'Cancelled'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('filled_quantity', models.DecimalField(decimal_places=8, default=Decimal('0'), max_digits=20)),
                ('avg_fill_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('filled_at', models.DateTimeField(blank=True, null=True)),
                ('stop_loss_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('client', models.ForeignKey(blank=True, help_text='Client that owns this record', null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.client')),
                ('strategy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.strategy')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.symbol')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record creation timestamp')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if this record is active')),
                ('side', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=10)),
                ('status', models.CharField(choices=[('PLANNED', 'Planned'), ('ACTIVE', 'Active'), ('CLOSED', 'Closed'), ('CANCELLED', 'Cancelled')], default='PLANNED', max_length=20)),
                ('stop_gain_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stop_loss_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('client', models.ForeignKey(blank=True, help_text='Client that owns this record', null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.client')),
                ('entry_orders', models.ManyToManyField(blank=True, related_name='operation_entries', to='api.order')),
                ('exit_orders', models.ManyToManyField(blank=True, related_name='operation_exits', to='api.order')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.strategy')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.symbol')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record creation timestamp')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if this record is active')),
                ('side', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=10)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20)),
                ('entry_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('exit_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('entry_fee', models.DecimalField(decimal_places=8, default=Decimal('0'), max_digits=20)),
                ('exit_fee', models.DecimalField(decimal_places=8, default=Decimal('0'), max_digits=20)),
                ('entry_time', models.DateTimeField()),
                ('exit_time', models.DateTimeField(blank=True, null=True)),
                ('pnl', models.DecimalField(decimal_places=8, default=Decimal('0'), max_digits=20)),
                ('client', models.ForeignKey(blank=True, help_text='Client that owns this record', null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.client')),
                ('strategy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.strategy')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.symbol')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
